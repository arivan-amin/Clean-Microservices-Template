spring.application.name = audit-service
server.port = 17002

#Eureka
eureka.client.serviceUrl.defaultZone = http://${EUREKA_USER}:${EUREKA_PASSWORD}@${EUREKA_HOST:localhost}:8761/eureka

# Observability
info.app.name = Audit Service
info.app.description = Audit Service
info.app.version = 1.0
management.observations.key-values.application = ${spring.application.name}
management.endpoints.web.exposure.include = *
management.tracing.sampling.probability = 1.0
management.info.build.enabled = true
management.info.git.enabled = true
management.info.env.enabled = true
management.endpoint.health.show-details = always
management.metrics.distribution.percentiles-histogram.http.server.requests = true
server.tomcat.mbeanregistry.enabled = true
management.endpoint.health.probes.enabled = true

# MongoDB
spring.data.mongodb.host = ${MONGO_DB_HOST:localhost}
spring.data.mongodb.port = ${MONGO_DB_PORT:27017}
spring.data.mongodb.database = ${MONGO_DB_DATABASE:audit-service}
spring.data.mongodb.username = ${MONGO_DB_USERNAME:root}
spring.data.mongodb.password = ${MONGO_DB_PASSWORD:mongo}
spring.data.mongodb.authentication-database = ${MONGO_DB_AUTH_DATABASE:admin}

# Cache
spring.cache.type = caffeine
spring.cache.caffeine.spec = maximumSize=100,expireAfterAccess=5m

# Kafka
spring.kafka.consumer.bootstrap-servers = ${KAFKA_BROKER_SERVER:localhost}:${KAFKA_BROKER_PORT:9092}
spring.kafka.consumer.group-id = api-audit-group
spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages = *
spring.kafka.consumer.auto-offset-reset = earliest

spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
